/* genData v2.0.1 | github.com/bemson | (c) 2012, MIT */
((typeof exports!="undefined"?exports:window).genData=function a(b){function p(a,b){this.name=a,this.value=b}if(this instanceof a)return this;var c,d,e,f=[["",b]],g,h,i,j={},k,l,m=[].slice.call(arguments).slice(1).filter(function(a){return typeof a=="function"}),n=m.length,o=[];p.prototype=(typeof this=="function"?this:a).prototype;while(f.length){i=f.shift(),d=new p(i[0],i[1]),c=0,k={omit:0,scan:1,exit:0,parent:null},l=[i[0],i[1],i[2],o,k,j];while(c<n&&!k.exit)m[c++].apply(d,l);k.omit?d._OMIT=!0:o.push(d);if(k.exit)f=[];else{h=[],g=k.parent!==null?k.parent:d.value;if(k.scan&&typeof g=="object"){for(e in g)g.hasOwnProperty(e)&&h.push([e,g[e],d]);f=h.concat(f)}}}return o}).spawn=function b(){function d(b){return this instanceof d?this:a.apply(typeof this=="function"?this:d,[b].concat(c,[].slice.call(arguments).slice(1)))}var a=this,c=[].slice.call(arguments).filter(function(a){return typeof a=="function"});return d.prototype=new a,d.spawn=b,d};