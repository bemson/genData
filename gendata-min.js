/*
 genData v0.7 / Bemi Faison (c) 2011 / MIT
 http://github.com/bemson/genData/
*/
function genData(a){var b=arguments,c,b,d=b.callee,e,f,g,h=[],i=[],j,k,l,m=d,n;if(!(this.hasOwnProperty&&this instanceof d)){b[1]&&(h=typeof b[1]=="function"?[b[1]]:b[1]),f=h.length;function o(a,b){this.name=a,this.value=b}b[2]&&(m=b[2]),o.prototype=m.prototype,o.prototype.constructor=m,k=[["",a]];while(k.length){l=k.shift(),e=0,n=new o(l[0],l[1]),c={exclude:0,scanValue:1,parse:1},b=[n.name,n.value,l[2],i,c];while(e<f&&c.parse)h[e++].apply(n,b);c.exclude?n._OMIT=!0:i.push(n),j=[];if(c.scanValue&&typeof n.value=="object")for(g in n.value)n.value.hasOwnProperty(g)&&j.push([g,n.value[g],n]);k=j.concat(k)}return i}if(a!==d){b[1]instanceof Array&&(m=a,b=b[1]),h=h.concat([].slice.call(b));function p(a,b,c){if(!(this.hasOwnProperty&&this instanceof p))return d(a,h.concat(b||[]),c&&c.protoype?c:p);if(a!==d)return new d(p,h.concat([].slice.call(arguments)));return this}p.prototype=new m(d),p.prototype.constructor=p;return p}return this}